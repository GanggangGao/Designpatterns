//
//  FactoryMethodVC.h
//  设计模式
//
//  Created by zachary spark on 2019/5/15.
//  Copyright © 2019 3g. All rights reserved.
//


/*

 内容一：设计模式？
 创建型模式->5种：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式
 结构型模式->7种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式
 行为型模式->11种：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式
 
 内容二：工厂方法模式？
 1、什么是工厂方法模式？（定义）
 定义一个用于创建对象的统一的接口，然后由子类实现。
 
 2、工厂方法模式->角色划分？
 4个核心角色
 角色一：抽象产品
 角色二：具体产品
 角色三：抽象工厂
 角色四：具体工厂
 
 3、工厂方法模式->原理案例？
 工厂创建电脑->富士康工厂
 华为工厂、三星工厂、苹果工厂、联想工厂…
 如何知道你制造出来的产品是电脑？
 因为：电脑标准规范（协议、接口）->特点
 角色一：抽象产品->定义产品规范（规格）->电脑规范
 角色二：具体产品->具体实现（具体制造目标）->具体电脑
 具体电脑：华为电脑、三星电脑、苹果电脑…
 角色三：抽象工厂->定义工厂规范和标准
 角色四：具体工厂->华为工厂、三星工厂
 
 定义角色？
 角色一：抽象产品->ComputerProtocol
 角色二：具体产品->SXComputer、HWComputer、MacComputer…
 角色三：抽象工厂->ComputerFactoryProtocol
 角色四：具体工厂->SXComputerFactory、HWComputerFactory…
 
 4、工厂方法模式->开发案例？
 如何使用工厂方法模式？
 聚合SDK设计（分享组件）
 地图案例举例子？
 工厂目的：用于创建对象的？
 分析需求：在我们的开发当中，场景，很多时候开发地图、分享功能、支付功能…?
 发现问题：当我们的需求变更的时候，你会发现我们项目迭代很麻烦？
 例如：早上我的项目用百度地图、下午我用高德地图？
 早上用的是支付宝、下午用的是微信？
 修改代码的时候就麻烦了，你需要不断的去修改客户端的代码，由于你不短的修改，导致维护的成本在增加？也就意味着我的开发周期和效率降低了，非公司带来的损失也就越大。由于越大也就导致了你的价值的体现。最终加班加点，熬夜加班，同时运气差开除劝退。
 解决方案：优化代码（项目重构）？
 上一节课：适配器模式重构
 今天晚上：工厂方法模式重构
 采用工厂方法模式？
 动态切换地图（一键切换）
 最少量的代码，切换强大功能
 
 实现代码：定义每一个类？
 1、分析角色？->方法
 从0开发写框架
 角色一：抽象产品->地图规范？
 MapViewProtocol
 百度地图：BMKMapView？
 BMKMapView : UIView
 高德地图：MAMapView?
 MAMapView : UIView
 结论：
 1、所有的地图MapView都是UIView子类
 2、所有的地图MapView都有类型
 地图类型、地图语言、是否支持平移
 共性问题、差异问题，先解决共性问题，再解决差异问题
 定义一个协议
 
 角色二：具体产品->具体地图
 例如：百度地图、高德地图…
 百度地图->BaiduMapView
 高德地图->GaodeMapView
 
 角色三：抽象工厂->生成地图
 具体是什么工厂->地图标准
 MapFactoryProtocol
 
 角色四：具体工厂->具体地图
 例如：百度工厂、高德工厂…
 BaiduMapFactory、GaodeMapFactory
 
 动态切换？
 发现问题：还是需要修改客户端的代码？
 达到目的：不修改客户端代码就能够达到要求？
 解决方案：
 1、用plist文件配置?->iOS自带的配置文件（特殊有规范的xml文件）
 2、用xml配置文件（自定义xml文件）
 3、用json文件配置
 4、宏定义也行
 如何实现？
 确定方案：用xml配置文件（自定义xml文件）
 1、分析文件结构？
 加载地图需要哪些参数？
 1、第一个规范
 百度地图->key
 高德地图->key
 这个key就是公共属性（标签）
 2、第二个规范
 key->对应地图->对应工厂
 baidu->key->BaiduMapFactory
 geode->key->GaodeMapFactory
 工厂属性：factory = "BaiduMapFactory"
 3、第三个规范->需要编号
 id = 1，id = 2
 4、第四个规范
 百度地图、高德地图、google地图…加载哪一个？
 开关按钮（控制加载哪一个地图）
 isOpen = "YES"
 如果用户所有的地图都设置了"YES"，默认启
 用第一个地图
 2、实现代码？->简单工厂模式
 首先：定义Model
 其次：实现解析类
 最后：简单工厂模式来了
 角色一：具体工厂 （一个类）
 地图引擎->MapEngine
 作用：动态创建工厂（动态管理工厂）
 解决客户端修改代码的问题
 角色二：具体产品（类多了）
 也可以通过服务器配置，返回xml解析（需求）
 代码是可配置的
 
 地图具体实现 + 抽象工厂模式
 plist文件配置，自己实现
 梳理一下->绘制一个UML
 
 简单工厂模式和工厂方法模式区别？
 核心：类结构（角色上面区别）
 简单工厂->抽象第一步->工厂方法
 工厂方法->抽象第二步->抽象工厂
 简单工厂角色？->MapEngine简单工厂设计
 两个角色
 角色一：具体工厂（一个）
 角色二：具体产品（多个）
 工厂方法角色
 角色一：抽象产品（一个）
 角色二：具体产品（多个）
 角色三：抽象工厂（一个）
 角色四：具体工厂（多个）

 */


#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

@interface FactoryMethodVC : UIViewController

@end

NS_ASSUME_NONNULL_END
